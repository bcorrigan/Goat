<project name="Goat" default="compile" basedir=".">
	<description>
        Builds Goat.
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="classes"/>
	<property name="jars" location="jars"/>
	<property name="version" value="2.0"/>
	<property name="docs" location="javadocs" />
    
    <path id="project.class.path">
        <pathelement path="${classpath}"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

	<path id="depends">
	</path>

	<path id="run">
	</path>
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
		<mkdir dir="${docs}"/>
	</target>

	<target name="compile" depends="init"
		description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" source="1.4" optimize="yes" debug="on" debuglevel="lines,vars,source">
            <classpath refid="project.class.path"/>
        </javac>
	</target>

	<target name="jar" depends="compile" description="Make a binary jar">
		<mkdir dir="${jars}/bin"/>
		<!--Need to narrow this to specific OSs via "os" property-->
		<exec executable="/bin/sh" output="${build}/goatRevision" os="Linux, FreeBSD">
			<arg line="tools/version.sh"/>
		</exec>
		<jar jarfile="${jars}/bin/Goat-${DSTAMP}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="goat.Goat"/>
				<attribute name="Built-By" value="${user.name}"/>
				<section name="common">
					<attribute name="Specification-Title" value="Goatyness"/>
					<attribute name="Specification-Version" value="Goaty Goat"/>
					<attribute name="Goat-Title" value="Goat"/>
					<attribute name="Goat-Version" value="2.0 ${DSTAMP} "/>
				</section>
			</manifest>
		</jar>
		<delete file="${build}/goatRevision"/>
		<!-- delete the jar in top dir, and replace with updated copy -->
		<delete file="goat.jar"/>
		<copy file="${jars}/bin/Goat-${DSTAMP}.jar" tofile="goat.jar"/>
	</target>

	<target name="doc"
		description="build documentation from source files"
		depends="init">
		<javadoc packagenames="*" sourcepath="${src}" destdir="${docs}" 
			author="yes" version="yes" use="yes" verbose="yes" 
			source="1.4" />
	</target>

	<target name="clean"
		description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
	</target>
    <target name="run" description="Start up goat">
        <java jar="goat.jar" fork="true" classpathref="project.class.path">
			  <!-- no idea what all this next malarkey was supposed to accomplish, replaced it with something sensible below -->
			  <!--
            <jvmarg value="-server -Xbootclasspath/a:lib/ant.jar:lib/jaxen-core.jar:lib/jaxen-jdom.jar:lib/jdom.jar:lib/saxpath.jar:lib/xalan.jar:lib/xerces.jar:lib/xml-apis.jar"/>
				-->
				<jvmarg value="-server" />
            <!--<classpath refid="project.class.path"/>-->
        </java>
    </target>
 
</project>


